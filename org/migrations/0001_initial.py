# Generated by Django 3.0.3 on 2020-04-08 15:02

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Acquisition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('announced_date_year', models.CharField(blank=True, max_length=4)),
                ('announced_date_month', models.CharField(blank=True, max_length=14)),
                ('announced_date_day', models.CharField(blank=True, max_length=2)),
                ('completed_date_year', models.CharField(blank=True, max_length=4)),
                ('completed_date_month', models.CharField(blank=True, max_length=14)),
                ('completed_date_day', models.CharField(blank=True, max_length=2)),
                ('price', models.DecimalField(decimal_places=2, default=None, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'acquisitions',
            },
        ),
        migrations.CreateModel(
            name='AcquisitionStatus',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'acquisition_statuses',
            },
        ),
        migrations.CreateModel(
            name='AcquisitionTerm',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'acquisition_terms',
            },
        ),
        migrations.CreateModel(
            name='AcquisitionType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'acquisition_types',
            },
        ),
        migrations.CreateModel(
            name='AppearanceType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'appearance_types',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='CompanyType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'company_types',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'currencies',
            },
        ),
        migrations.CreateModel(
            name='Disposition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'dispositions',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('profile_image', models.ImageField(default=None, max_length=2056, upload_to='event')),
                ('name', models.CharField(max_length=1000)),
                ('description', models.TextField()),
                ('start_date_year', models.CharField(blank=True, max_length=4)),
                ('start_date_month', models.CharField(blank=True, max_length=14)),
                ('start_date_day', models.CharField(blank=True, max_length=4)),
                ('end_date_year', models.CharField(blank=True, max_length=4)),
                ('end_date_month', models.CharField(blank=True, max_length=14)),
                ('end_date_day', models.CharField(blank=True, max_length=4)),
                ('event_url', models.URLField(null=True)),
                ('registration_url', models.URLField(null=True)),
                ('full_description', models.TextField(null=True)),
                ('venue_address', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_categories',
            },
        ),
        migrations.CreateModel(
            name='EventType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'event_types',
            },
        ),
        migrations.CreateModel(
            name='FundingRound',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('announced_date_year', models.CharField(blank=True, max_length=4)),
                ('announced_date_month', models.CharField(blank=True, max_length=14)),
                ('announced_date_day', models.CharField(blank=True, max_length=2)),
                ('closed_date_year', models.CharField(blank=True, max_length=4)),
                ('closed_date_month', models.CharField(blank=True, max_length=14)),
                ('closed_date_day', models.CharField(blank=True, max_length=2)),
                ('money_raised', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('target_funding', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('pre_money_valuation', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'funding_rounds',
            },
        ),
        migrations.CreateModel(
            name='FundingType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'funding_types',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'genders',
            },
        ),
        migrations.CreateModel(
            name='InvestmentStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'investment_stages',
            },
        ),
        migrations.CreateModel(
            name='InvestorStage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'investor_stages',
            },
        ),
        migrations.CreateModel(
            name='InvestorType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'investor_types',
            },
        ),
        migrations.CreateModel(
            name='JobPosition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'job_positions',
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField()),
                ('url', models.URLField()),
                ('date_year', models.CharField(blank=True, max_length=4)),
                ('date_month', models.CharField(blank=True, max_length=14)),
                ('date_day', models.CharField(blank=True, max_length=2)),
                ('publisher', models.CharField(max_length=1000, null=True)),
                ('thumbnail_url', models.URLField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'news',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('profile_image', models.ImageField(default=None, max_length=2056, null=True, upload_to='organization')),
                ('organization_type', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=1000)),
                ('description', models.TextField()),
                ('aka', models.CharField(max_length=1000, null=True)),
                ('legal_name', models.CharField(max_length=1000, null=True)),
                ('founded_date_year', models.CharField(blank=True, max_length=4)),
                ('founded_date_month', models.CharField(blank=True, max_length=14)),
                ('founded_date_day', models.CharField(blank=True, max_length=2)),
                ('closed_date_year', models.CharField(blank=True, max_length=4)),
                ('closed_date_month', models.CharField(blank=True, max_length=14)),
                ('closed_date_day', models.CharField(blank=True, max_length=2)),
                ('number_of_employees', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.URLField(null=True)),
                ('facebook', models.URLField(null=True)),
                ('linkedin', models.URLField(null=True)),
                ('twitter', models.URLField(null=True)),
                ('contact_email', models.EmailField(max_length=254, null=True)),
                ('phone_number', models.CharField(max_length=100, null=True)),
                ('full_description', models.TextField(null=True)),
                ('stock_symbol', models.CharField(max_length=1000, null=True)),
                ('ipo_date_year', models.CharField(blank=True, max_length=4)),
                ('ipo_date_month', models.CharField(blank=True, max_length=14)),
                ('ipo_date_day', models.CharField(blank=True, max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.City')),
                ('company_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.CompanyType')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.Country')),
                ('investment_stage', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.InvestmentStage')),
                ('investor_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.InvestorType')),
            ],
            options={
                'db_table': 'organizations',
            },
        ),
        migrations.CreateModel(
            name='OrganizationCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'organization_categories',
            },
        ),
        migrations.CreateModel(
            name='OrganizationRelation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'organization_relations',
            },
        ),
        migrations.CreateModel(
            name='OrganizationSubCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.OrganizationCategory')),
            ],
            options={
                'db_table': 'organization_sub_categories',
            },
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'organization_types',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('profile_image', models.ImageField(default=None, max_length=2056, upload_to='person')),
                ('type', models.CharField(max_length=200)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('aka', models.CharField(default=None, max_length=100, null=True)),
                ('website', models.URLField(blank=True, default='', null=True)),
                ('facebook', models.URLField(blank=True, null=True)),
                ('linkedin', models.URLField(blank=True, null=True)),
                ('twitter', models.URLField(blank=True, null=True)),
                ('biography', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.City')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.Country')),
                ('gender', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='org.Gender')),
                ('investor_stage', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='org.InvestorStage')),
            ],
            options={
                'db_table': 'persons',
            },
        ),
        migrations.CreateModel(
            name='PersonType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'person_types',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('profile_image', models.ImageField(default=None, max_length=2056, upload_to='platform')),
                ('name', models.CharField(max_length=1000)),
                ('description', models.TextField()),
                ('founded_date_year', models.CharField(blank=True, max_length=4)),
                ('founded_date_month', models.CharField(blank=True, max_length=14)),
                ('founded_date_day', models.CharField(blank=True, max_length=2)),
                ('closed_date_year', models.CharField(blank=True, max_length=4)),
                ('closed_date_month', models.CharField(blank=True, max_length=14)),
                ('closed_date_day', models.CharField(blank=True, max_length=2)),
                ('website', models.URLField()),
                ('facebook', models.URLField()),
                ('linkedin', models.URLField()),
                ('twitter', models.URLField()),
                ('contact_email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=100)),
                ('full_description', models.TextField()),
                ('producers', models.TextField()),
                ('consumers', models.TextField()),
                ('partners', models.TextField()),
                ('transactions', models.TextField()),
                ('value', models.TextField()),
                ('network_effects', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owned_by_organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.Organization')),
            ],
            options={
                'db_table': 'platforms',
            },
        ),
        migrations.CreateModel(
            name='PlatformBusinessModelType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'platform_business_model_types',
            },
        ),
        migrations.CreateModel(
            name='StockExchange',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'stock_exchanges',
            },
        ),
        migrations.CreateModel(
            name='SiteAdmin',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PlatformNews',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.News')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Platform')),
            ],
            options={
                'db_table': 'platform_news',
            },
        ),
        migrations.CreateModel(
            name='PlatformCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.OrganizationSubCategory')),
                ('platform', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Platform')),
            ],
            options={
                'db_table': 'platform_categories',
            },
        ),
        migrations.AddField(
            model_name='platform',
            name='platform_business_model_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.PlatformBusinessModelType'),
        ),
        migrations.CreateModel(
            name='PersonNews',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.News')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Person')),
            ],
            options={
                'db_table': 'people_news',
            },
        ),
        migrations.CreateModel(
            name='PersonJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=1000)),
                ('start_date_year', models.CharField(blank=True, max_length=4)),
                ('start_date_month', models.CharField(blank=True, max_length=14)),
                ('start_date_day', models.CharField(blank=True, max_length=2)),
                ('has_end_date', models.BooleanField(null=True)),
                ('end_date_year', models.CharField(blank=True, max_length=4)),
                ('end_date_month', models.CharField(blank=True, max_length=14)),
                ('end_date_day', models.CharField(blank=True, max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Person')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.JobPosition')),
            ],
            options={
                'db_table': 'person_jobs',
            },
        ),
        migrations.CreateModel(
            name='OrgSubOrganization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization', to='org.Organization')),
                ('relation', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='org.OrganizationRelation')),
                ('sub_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sub_organization', to='org.Organization')),
            ],
            options={
                'db_table': 'org_sub_organizations',
            },
        ),
        migrations.CreateModel(
            name='OrganizationNews',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.News')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Organization')),
            ],
            options={
                'db_table': 'organization_news',
            },
        ),
        migrations.CreateModel(
            name='OrganizationHasCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.OrganizationSubCategory')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Organization')),
            ],
            options={
                'db_table': 'organization_has_categories',
            },
        ),
        migrations.AddField(
            model_name='organization',
            name='platform_business_mode_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.PlatformBusinessModelType'),
        ),
        migrations.AddField(
            model_name='organization',
            name='stock_exchange',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.StockExchange'),
        ),
        migrations.CreateModel(
            name='FundingRoundInvestorOrganization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lead_investor', models.BooleanField(null=True)),
                ('money_raised', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('funding_round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.FundingRound')),
                ('investor_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Organization')),
                ('money_raised_currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organization_money_raised_currency', to='org.Currency')),
            ],
            options={
                'db_table': 'funding_round_investor_organizations',
            },
        ),
        migrations.CreateModel(
            name='FundingRoundInvestor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('lead_investor', models.BooleanField(null=True)),
                ('money_raised', models.DecimalField(decimal_places=2, max_digits=15, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('funding_round', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.FundingRound')),
                ('money_raised_currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_money_raised_currency', to='org.Currency')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Person')),
            ],
            options={
                'db_table': 'funding_round_investors',
            },
        ),
        migrations.AddField(
            model_name='fundinground',
            name='funding_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.FundingType'),
        ),
        migrations.AddField(
            model_name='fundinground',
            name='investee_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Organization'),
        ),
        migrations.AddField(
            model_name='fundinground',
            name='money_raised_currency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='money_raised_currency', to='org.Currency'),
        ),
        migrations.AddField(
            model_name='fundinground',
            name='pre_money_valuation_currency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pre_money_valuation_currency', to='org.Currency'),
        ),
        migrations.AddField(
            model_name='fundinground',
            name='target_funding_currency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='target_funding_currency', to='org.Currency'),
        ),
        migrations.CreateModel(
            name='FundingNews',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('funding', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.FundingRound')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.News')),
            ],
            options={
                'db_table': 'funding_news',
            },
        ),
        migrations.CreateModel(
            name='EventSubCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.EventCategory')),
            ],
            options={
                'db_table': 'event_sub_categories',
            },
        ),
        migrations.CreateModel(
            name='EventPerson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appearance_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.AppearanceType')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Event')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Person')),
            ],
            options={
                'db_table': 'event_persons',
            },
        ),
        migrations.CreateModel(
            name='EventOrganization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appearance_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.AppearanceType')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Event')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Organization')),
            ],
            options={
                'db_table': 'event_organizations',
            },
        ),
        migrations.CreateModel(
            name='EventNews',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Event')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.News')),
            ],
            options={
                'db_table': 'event_news',
            },
        ),
        migrations.AddField(
            model_name='event',
            name='event_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.EventCategory'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_sub_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.EventSubCategory'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.EventType'),
        ),
        migrations.AddField(
            model_name='event',
            name='venue_city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.City'),
        ),
        migrations.AddField(
            model_name='event',
            name='venue_country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.Country'),
        ),
        migrations.CreateModel(
            name='CompanyFounder',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Organization')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Person')),
            ],
            options={
                'db_table': 'company_founders',
            },
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Country'),
        ),
        migrations.CreateModel(
            name='AcquisitionNews',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acquisition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.Acquisition')),
                ('news', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.News')),
            ],
            options={
                'db_table': 'acquisition_news',
            },
        ),
        migrations.CreateModel(
            name='Acquisition2',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appearance_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='org.AppearanceType')),
            ],
            options={
                'db_table': 'acquisitions3',
            },
        ),
        migrations.AddField(
            model_name='acquisition',
            name='acquired_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acquired_organization', to='org.Organization'),
        ),
        migrations.AddField(
            model_name='acquisition',
            name='acquiring_organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='acquiring_organization', to='org.Organization'),
        ),
        migrations.AddField(
            model_name='acquisition',
            name='acquisition_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.AcquisitionStatus'),
        ),
        migrations.AddField(
            model_name='acquisition',
            name='acquisition_term',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.AcquisitionTerm'),
        ),
        migrations.AddField(
            model_name='acquisition',
            name='acquisition_type',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.AcquisitionType'),
        ),
        migrations.AddField(
            model_name='acquisition',
            name='currency',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='org.Currency'),
        ),
        migrations.AddField(
            model_name='acquisition',
            name='disposition',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='org.Disposition'),
        ),
    ]
